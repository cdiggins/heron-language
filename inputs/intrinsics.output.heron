// Generated on Sun Mar 11 2018 00:26:28 GMT-0500 (Eastern Standard Time)
heron:std:0.1heron:intrinsics:0.1{
FloatFloat2Float3Float4IntBoolStringStringBuilderArrayArrayBuilderFunctionintrinsic float2(x : Float, y : Float) : Float2
;
intrinsic x(v : Float2) : Float
;
intrinsic y(v : Float2) : Float
;
intrinsic float3(x : Float, y : Float, z : Float) : Float3
;
intrinsic x(v : Float3) : Float
;
intrinsic y(v : Float3) : Float
;
intrinsic z(v : Float3) : Float
;
intrinsic float4(x : Float, y : Float, z : Float, w : Float) : Float4
;
intrinsic x(v : Float4) : Float
;
intrinsic y(v : Float4) : Float
;
intrinsic z(v : Float4) : Float
;
intrinsic w(v : Float4) : Float
;
intrinsic abs(x : Float) : Float
;
intrinsic acos(x : Float) : Float
;
intrinsic asin(x : Float) : Float
;
intrinsic atan(x : Float) : Float
;
intrinsic atan2(y : Float, x : Float) : Float
;
intrinsic ceil(x : Float) : Float
;
intrinsic clamp(x : Float, min : Float, max : Float) : Float
;
intrinsic cos(x : Float) : Float
;
intrinsic exp(x : Float) : Float
;
intrinsic floor(x : Float) : Float
;
intrinsic log(x : Float) : Float
;
intrinsic max(x : Float, y : Float) : Float
;
intrinsic min(x : Float, y : Float) : Float
;
intrinsic pow(x : Float, y : Float) : Float
;
intrinsic round(x : Float) : Float
;
intrinsic sin(x : Float) : Float
;
intrinsic sign(x : Float) : Float
;
intrinsic sqrt(x : Float) : Float
;
intrinsic tan(x : Float) : Float
;
intrinsic op+(x : Float, y : Float) : Float
;
intrinsic op-(x : Float, y : Float) : Float
;
intrinsic op*(x : Float, y : Float) : Float
;
intrinsic op/(x : Float, y : Float) : Float
;
intrinsic op%(x : Float, y : Float) : Float
;
intrinsic op>(x : Float, y : Float) : Bool
;
intrinsic op>=(x : Float, y : Float) : Bool
;
intrinsic op<(x : Float, y : Float) : Bool
;
intrinsic op<=(x : Float, y : Float) : Bool
;
intrinsic op!=(x : Float, y : Float) : Bool
;
intrinsic op==(x : Float, y : Float) : Bool
;
intrinsic op_at(x : Array, i : Int) : Any
;
intrinsic op_range(from : Int, to : Int) : Array
;
intrinsic op_not(x : Bool) : Bool
;
intrinsic op_negate(x : Float) : Float
;
intrinsic array(n : Int, f : Function) : Array
;
intrinsic count(xs : Array) : Int
;
intrinsic at(xs : Array, i : Int) : Any
;
intrinsic mutable(xs : Array) : ArrayBuilder
;
intrinsic push(xs : ArrayBuilder, x : Any) : ArrayBuilder
;
intrinsic set(xs : ArrayBuilder, i : Int, x : Any) : ArrayBuilder
;
intrinsic array(xs : ArrayBuilder) : Array
;
intrinsic count(xs : ArrayBuilder) : Int
;
intrinsic at(xs : ArrayBuilder, i : count) : Any
;

/**
function array(v: Float2) = [v.x, v.y];    
    
*/
function array(v : Float2)
 = [v.x, v.y];

/**
function array(v: Float3) = [v.x, v.y, v.z];
    
*/
function array(v : Float3)
 = [v.x, v.y, v.z];

/**
function array(v: Float4) = [v.x, v.y, v.z, v.w];

    
*/
function array(v : Float4)
 = [v.x, v.y, v.z, v.w];

/**
function float2(xs) = float2(xs[0], xs[1]);
    
*/
function float2(xs)
 = float2(xs[0], xs[1]);

/**
function float3(xs) = float3(xs[0], xs[1], xs[2]);
    
*/
function float3(xs)
 = float3(xs[0], xs[1], xs[2]);

/**
function float4(xs) = float4(xs[0], xs[1], xs[2], xs[3]);    

    // A couple of useful constants 
    
*/
function float4(xs)
 = float4(xs[0], xs[1], xs[2], xs[3]);
var pi = 3.14159265358979323846;
var e = 2.71828182845904523536;
intrinsic print(x)
;
intrinsic assert(x : Bool)
;
}

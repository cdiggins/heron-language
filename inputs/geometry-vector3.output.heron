// Generated on Sat Mar 24 2018 16:42:23 GMT-0400 (Eastern Daylight Time)
heron:std:0.1heron:geometry.vector:0.1{
var // definition type undefined
origin// expression type undefined
// expression type undefined
vector(// expression type undefined
0, // expression type undefined
0, // expression type undefined
0);
var // definition type undefined
ones// expression type undefined
// expression type undefined
vector(// expression type undefined
1, // expression type undefined
1, // expression type undefined
1);
var // definition type undefined
xaxis// expression type undefined
// expression type undefined
vector(// expression type undefined
1, // expression type undefined
0, // expression type undefined
0);
var // definition type undefined
yaxis// expression type undefined
// expression type undefined
vector(// expression type undefined
0, // expression type undefined
1, // expression type undefined
0);
var // definition type undefined
zaxis// expression type undefined
// expression type undefined
vector(// expression type undefined
0, // expression type undefined
0, // expression type undefined
1);
// definition type (Func Float Float Float R)

/**
function vector(x: Float, y: Float, z: Float) 
        = float3(x, y, z);

    
*/
// definition type (Func Float Float Float R)
function vector(// definition type Float
x : Float, // definition type Float
y : Float, // definition type Float
z : Float)
// expression type Error
// expression type (FuncSet ((Func Float Float Float Float3) (Func Float R)))
float3(// expression type Float
x, // expression type Float
y, // expression type Float
z)// definition type (Func Float R)

/**
function vector(x: Float)
        = vector(x, x, x);

    
*/
// definition type (Func Float R)
function vector(// definition type Float
x : Float)
// expression type Error
// expression type (FuncSet ((Func Float Float Float R) (Func Float R) (Func Float R) (Func Array R)))
vector(// expression type Float
x, // expression type Float
x, // expression type Float
x)// definition type !T0.(Func T0 R)

/**
function vector(v)
        = vector(v.x, v.y, v.z);

    
*/
// definition type !T0.(Func T0 R)
function vector(// definition type T0
v)
// expression type Error
// expression type Error
vector(// expression type Error
// expression type Error
x(// expression type T0
v), // expression type Error
// expression type Error
y(// expression type T0
v), // expression type Error
// expression type Error
z(// expression type T0
v))// definition type (Func Array R)

/**
function vector(xs: Array)
        = vector(xs[0], xs[1], xs[2]);

    
*/
// definition type (Func Array R)
function vector(// definition type Array
xs : Array)
// expression type Error
// expression type Error
vector(// expression type Error
// expression type (Func (Array T) Int T)
op[](// expression type Array
xs, // expression type Num
0), // expression type Error
// expression type (Func (Array T) Int T)
op[](// expression type Array
xs, // expression type Num
1), // expression type Error
// expression type (Func (Array T) Int T)
op[](// expression type Array
xs, // expression type Num
2))// definition type (Func T0 R)

/**
function array(v) 
        = [v.x, v.y, v.z];

    
*/
// definition type (Func T0 R)
function array(// definition type T0
v)
// expression type (Array Float)
[// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T0
v), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T0
v), // expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T0
v)]// definition type (Func T0 R)

/**
function sum(v) 
        = v.x + v.y + v.z;
    
    
*/
// definition type (Func T0 R)
function sum(// definition type T0
v)
// expression type Error
// expression type (Func Float Float Float)
op+(// expression type Error
// expression type (Func Float Float Float)
op+(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T0
v), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T0
v)), // expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T0
v))// definition type (Func T0 T1 R)

/**
function dot(a, b) 
        = sum(a * b);    
    
    
*/
// definition type (Func T0 T1 R)
function dot(// definition type T0
a, // definition type T1
b)
// expression type Error
// expression type (Func T0 R)
sum(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type T0
a, // expression type T1
b))// definition type (Func T0 R)

/**
function length(v) 
        = sqrt(v.length2);    
    
    
*/
// definition type (Func T0 R)
function length(// definition type T0
v)
// expression type Error
// expression type (Func Float Float)
sqrt(// expression type Error
// expression type (Func T0 R)
length2(// expression type T0
v))// definition type (Func T0 R)

/**
function length2(v) 
        = v.dot(v);        

    
*/
// definition type (Func T0 R)
function length2(// definition type T0
v)
// expression type Error
// expression type (Func T0 T1 R)
dot(// expression type T0
v, // expression type T0
v)// definition type (Func T0 T1 R)

/**
function distance(a, b)
        = (a - b).length;

    
*/
// definition type (Func T0 T1 R)
function distance(// definition type T0
a, // definition type T1
b)
// expression type Error
// expression type (Func T0 R)
length(// expression type Error
(// expression type Error
// expression type (Func Float Float Float)
op-(// expression type T0
a, // expression type T1
b)))// definition type (Func T0 T1 R)

/**
function distance2(a, b)
        = (a - b).length2;

    
*/
// definition type (Func T0 T1 R)
function distance2(// definition type T0
a, // definition type T1
b)
// expression type Error
// expression type (Func T0 R)
length2(// expression type Error
(// expression type Error
// expression type (Func Float Float Float)
op-(// expression type T0
a, // expression type T1
b)))// definition type (Func T0 R)

/**
function normal(v) 
        = v / v.length;

    
*/
// definition type (Func T0 R)
function normal(// definition type T0
v)
// expression type Error
// expression type (Func Float Float Float)
op/(// expression type T0
v, // expression type Error
// expression type (Func T0 R)
length(// expression type T0
v))// definition type (Func T0 T1 R)

/**
function cross(a, b)
        = vector(a.y*b.z - a.z*b.y, a.z*b.x - a.x*b.z, a.x*b.y - a.y*b.x);

    
*/
// definition type (Func T0 T1 R)
function cross(// definition type T0
a, // definition type T1
b)
// expression type Error
// expression type (FuncSet ((Func Float Float Float R) (Func Float R) (Func T0 R) (Func Array R)))
vector(// expression type Error
// expression type (Func Float Float Float)
op-(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T1
b)), // expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T1
b))), // expression type Error
// expression type (Func Float Float Float)
op-(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T1
b)), // expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T1
b))), // expression type Error
// expression type (Func Float Float Float)
op-(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T1
b)), // expression type Error
// expression type (Func Float Float Float)
op*(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T0
a), // expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T1
b))))// definition type (Func T0 T1 R)

/**
function reflect(v, n)
        = v - (n * dot(v, n) * 2.0);

    
*/
// definition type (Func T0 T1 R)
function reflect(// definition type T0
v, // definition type T1
n)
// expression type Error
// expression type (Func Float Float Float)
op-(// expression type T0
v, // expression type Error
(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type T1
n, // expression type Error
// expression type (Func T0 T1 R)
dot(// expression type T0
v, // expression type T1
n)), // expression type Num
2.0)))// definition type (Func T0 T1 T2 R)

/**
function lerp(a, b, x)
        = a * (1.0 - x) + b * x;            

    
*/
// definition type (Func T0 T1 T2 R)
function lerp(// definition type T0
a, // definition type T1
b, // definition type T2
x)
// expression type Error
// expression type (Func Float Float Float)
op+(// expression type Error
// expression type (Func Float Float Float)
op*(// expression type T0
a, // expression type Error
(// expression type Error
// expression type (Func Float Float Float)
op-(// expression type Num
1.0, // expression type T2
x))), // expression type Error
// expression type (Func Float Float Float)
op*(// expression type T1
b, // expression type T2
x))// definition type (Func T0 R)

/**
function negate(v)
        = vector(-v.x, -v.y, -v.z);

*/
// definition type (Func T0 R)
function negate(// definition type T0
v)
// expression type Error
// expression type (FuncSet ((Func Float Float Float R) (Func Float R) (Func T0 R) (Func Array R)))
vector(// expression type Error
// expression type (Func Float Float)
op_negate(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
x(// expression type T0
v)), // expression type Error
// expression type (Func Float Float)
op_negate(// expression type Float
// expression type (FuncSet ((Func Float2 Float) (Func Float3 Float) (Func Float4 Float)))
y(// expression type T0
v)), // expression type Error
// expression type (Func Float Float)
op_negate(// expression type Float
// expression type (FuncSet ((Func Float3 Float) (Func Float4 Float)))
z(// expression type T0
v)))}

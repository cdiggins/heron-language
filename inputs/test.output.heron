// Generated on Sun Apr 01 2018 18:40:49 GMT-0400 (Eastern Daylight Time)
heron:std:0.1heron:tests:0.1{
heron:std.array:0.1// definition type !'@592.(Func '@592)

/**
function main() {
        simpleTest();
    }

    
*/
// definition type !'@592.(Func '@592)
function main()
{
// expression type '@760
// expression type !'@594.(Func '@594)
simpleTest();
}
// definition type !'@594.(Func '@594)

/**
function simpleTest() {
        var xs = [1, 11, 3];
        print('Expect [1, 11, 3]');
        print(xs);
        print('Expect 1, 11, 3');
        for (var x in xs)
            print(x);
        print('Expect 1');            
        print(xs[0]);
        print('Expect 3');            
        print(xs.count);
        print('Expect 1');            
        print(xs.first);
        print('Expect 3');            
        print(xs.last);
        print('Expect 1');            
        print(xs.min);
        print('Expect 11');            
        print(xs.max);
        print('Expect 3');            
        print(xs.median);
        print('Expect 15');            
        print(xs.sum);
        print('Expect 5');            
        print(xs.average);
    }

*/
// definition type !'@594.(Func '@594)
function simpleTest()
{
var // definition type (Array Int)
xs// expression type (Array Int)
[// expression type Int
1, // expression type Int
11, // expression type Int
3];
// expression type '@600
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect [1, 11, 3]');
// expression type '@602
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type (Array Int)
xs);
// expression type '@604
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 1, 11, 3');
// definition type '$8
for (x in // expression type (Array Int)
xs)
// expression type '@606
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
x);
// expression type '@608
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 1');
// expression type '@611
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type !'T.(Func !'T.(Array 'T) Int 'T)
op[](// expression type (Array Int)
xs, // expression type Int
0));
// expression type '@613
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 3');
// expression type '@616
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type !'T.(FuncSet !'@79!'@81.((Func (Array 'T) Int) (Func (Array '@79) (Func '@79 '@81) Int)))
count(// expression type (Array Int)
xs));
// expression type '@618
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 1');
// expression type '@621
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type !'@491.(Func !'@491.(Array '@491) '@491)
first(// expression type (Array Int)
xs));
// expression type '@623
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 3');
// expression type '@627
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type '@625
// expression type !'@565.(Func !'@563.(Array '@563) '@565)
last(// expression type (Array Int)
xs));
// expression type '@629
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 1');
// expression type '@653
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type !'@634.(FuncSet ((Func '@634 '@634 '@634) (Func (Array '@634) '@634)))
min(// expression type (Array Int)
xs));
// expression type '@655
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 11');
// expression type '@673
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type !'@660.(FuncSet ((Func '@660 '@660 '@660) (Func (Array '@660) '@660)))
max(// expression type (Array Int)
xs));
// expression type '@675
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 3');
// expression type '@751
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type (Func (Array Int) Int)
median(// expression type (Array Int)
xs));
// expression type '@753
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 15');
// expression type '@755
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type (Func (Array Int) Int)
sum(// expression type (Array Int)
xs));
// expression type '@757
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Str
'Expect 5');
// expression type '@759
// expression type !'@597!'@598.(Func '@597 '@598)
print(// expression type Int
// expression type (Func (Array Int) Int)
average(// expression type (Array Int)
xs));
}
}

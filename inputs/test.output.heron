// Generated on Sun Apr 01 2018 18:52:52 GMT-0400 (Eastern Daylight Time)
heron:std:0.1heron:tests:0.1{
heron:std.array:0.1// definition type !'@578.(Func '@578)

/**
function main() {
        simpleTest();
    }

    
*/
// definition type !'@578.(Func '@578)
function main()
{
// expression type '@744
// expression type !'@580.(Func '@580)
simpleTest();
}
// definition type !'@580.(Func '@580)

/**
function simpleTest() {
        var xs = [1, 11, 3];
        print('Expect [1, 11, 3]');
        print(xs);
        print('Expect 1, 11, 3');
        for (var x in xs)
            print(x);
        print('Expect 1');            
        print(xs[0]);
        print('Expect 3');            
        print(xs.count);
        print('Expect 1');            
        print(xs.first);
        print('Expect 3');            
        print(xs.last);
        print('Expect 1');            
        print(xs.min);
        print('Expect 11');            
        print(xs.max);
        print('Expect 3');            
        print(xs.median);
        print('Expect 15');            
        print(xs.sum);
        print('Expect 5');            
        print(xs.average);
    }

*/
// definition type !'@580.(Func '@580)
function simpleTest()
{
var // definition type (Array Int)
xs// expression type (Array Int)
[// expression type Int
1, // expression type Int
11, // expression type Int
3];
// expression type '@586
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect [1, 11, 3]');
// expression type '@588
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type (Array Int)
xs);
// expression type '@590
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 1, 11, 3');
// definition type '$8
for (x in // expression type (Array Int)
xs)
// expression type '@592
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
x);
// expression type '@594
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 1');
// expression type '@597
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type !'T.(Func !'T.(Array 'T) Int 'T)
op[](// expression type (Array Int)
xs, // expression type Int
0));
// expression type '@599
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 3');
// expression type '@602
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type !'T.(FuncSet !'@79.((Func (Array 'T) Int) (Func (Array '@79) (Func '@79 Bool) Int)))
count(// expression type (Array Int)
xs));
// expression type '@604
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 1');
// expression type '@607
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type !'@479.(Func !'@479.(Array '@479) '@479)
first(// expression type (Array Int)
xs));
// expression type '@609
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 3');
// expression type '@613
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type '@611
// expression type !'@551.(Func !'@549.(Array '@549) '@551)
last(// expression type (Array Int)
xs));
// expression type '@615
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 1');
// expression type '@638
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type !'@620.(FuncSet ((Func '@620 '@620 '@620) (Func (Array '@620) '@620)))
min(// expression type (Array Int)
xs));
// expression type '@640
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 11');
// expression type '@657
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type !'@645.(FuncSet ((Func '@645 '@645 '@645) (Func (Array '@645) '@645)))
max(// expression type (Array Int)
xs));
// expression type '@659
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 3');
// expression type '@735
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type (Func (Array Int) Int)
median(// expression type (Array Int)
xs));
// expression type '@737
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 15');
// expression type '@739
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type (Func (Array Int) Int)
sum(// expression type (Array Int)
xs));
// expression type '@741
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Str
'Expect 5');
// expression type '@743
// expression type !'@583!'@584.(Func '@583 '@584)
print(// expression type Int
// expression type (Func (Array Int) Int)
average(// expression type (Array Int)
xs));
}
}

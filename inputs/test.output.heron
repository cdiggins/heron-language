// Generated on Thu Mar 15 2018 19:14:07 GMT-0400 (Eastern Daylight Time)
heron:std:0.1// scope module_338
heron:tests:0.1{
heron:std.array:0.1// scope funcDef_25
// definition main_FuncDef25
// type (() -> Any)

/**
function main() {
        simpleTest();
    }

    
*/
// scope funcDef_25
// definition main_FuncDef25
// type (() -> Any)
function main()
// scope recCompoundStatement_22
{
// scope compoundStatement_21
{
// expression FunCall simpleTest()
// type Any
// reference simpleTest_17:varName:var[simpleTest_FuncDef336]
// expression VarName simpleTest
// type Any
simpleTest();
}
}
// scope funcDef_336
// definition simpleTest_FuncDef336
// type (() -> Any)

/**
function simpleTest() {
        var xs = [1, 11, 3];
        print('Expect [1, 11, 3]');
        print(xs);
        print('Expect 1, 11, 3');
        for (var x in xs)
            print(x);
        print('Expect 1');            
        print(xs[0]);
        print('Expect 3');            
        print(xs.count);
        print('Expect 1');            
        print(xs.first);
        print('Expect 3');            
        print(xs.last);
        print('Expect 1');            
        print(xs.min);
        print('Expect 11');            
        print(xs.max);
        print('Expect 3');            
        print(xs.median);
        print('Expect 15');            
        print(xs.sum);
        print('Expect 5');            
        print(xs.average);
    }

*/
// scope funcDef_336
// definition simpleTest_FuncDef336
// type (() -> Any)
function simpleTest()
// scope recCompoundStatement_333
{
// scope compoundStatement_332
{
var // definition xs_VarDef37
// type Array
xs// expression ArrayLiteral [1,11,3]
// type Array
[// expression NumLiteral 1
// type Num
1, // expression NumLiteral 11
// type Num
11, // expression NumLiteral 3
// type Num
3];
// expression FunCall print('Expect [1, 11, 3]')
// type Any
// reference print_41:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect [1, 11, 3]'
// type Str
'Expect [1, 11, 3]');
// expression FunCall print(xs)
// type Any
// reference print_65:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// reference xs_67:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs);
// expression FunCall print('Expect 1, 11, 3')
// type Any
// reference print_72:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 1, 11, 3'
// type Str
'Expect 1, 11, 3');
// scope forLoop_103
// definition x_ForLoopVarDef103
// type Any
for (x in // reference xs_95:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs)
// expression FunCall print(x)
// type Any
// reference print_97:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// reference x_99:varName:var[x_ForLoopVarDef103]
// expression VarName x
// type Any
x);
// expression FunCall print('Expect 1')
// type Any
// reference print_105:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 1'
// type Str
'Expect 1');
// expression FunCall print(op[](xs,0))
// type Any
// reference print_120:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall op[](xs,0)
// type Any
// reference op[]_121:varName:var[op[]_FuncDef964]
// expression VarName op[]
// type Any
op[](// reference xs_123:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs, // expression NumLiteral 0
// type Num
0));
// expression FunCall print('Expect 3')
// type Any
// reference print_131:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 3'
// type Str
'Expect 3');
// expression FunCall print(count(xs))
// type Any
// reference print_146:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall count(xs)
// type Any
// reference count_147:varName:var[count_FuncDef463]
// expression VarName count
// type Any
count(// reference xs_149:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 1')
// type Any
// reference print_156:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 1'
// type Str
'Expect 1');
// expression FunCall print(first(xs))
// type Any
// reference print_171:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall first(xs)
// type Any
// reference first_172:varName:var[first_FuncDef1816]
// expression VarName first
// type Any
first(// reference xs_174:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 3')
// type Any
// reference print_181:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 3'
// type Str
'Expect 3');
// expression FunCall print(last(xs))
// type Any
// reference print_196:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall last(xs)
// type Any
// reference last_197:varName:var[last_FuncDef1799]
// expression VarName last
// type Any
last(// reference xs_199:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 1')
// type Any
// reference print_206:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 1'
// type Str
'Expect 1');
// expression FunCall print(min(xs))
// type Any
// reference print_221:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall min(xs)
// type Any
// reference min_222:varName:var[min_FuncDef84]
// expression VarName min
// type Any
min(// reference xs_224:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 11')
// type Any
// reference print_231:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 11'
// type Str
'Expect 11');
// expression FunCall print(max(xs))
// type Any
// reference print_247:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall max(xs)
// type Any
// reference max_248:varName:var[max_FuncDef111]
// expression VarName max
// type Any
max(// reference xs_250:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 3')
// type Any
// reference print_257:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 3'
// type Str
'Expect 3');
// expression FunCall print(median(xs))
// type Any
// reference print_272:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall median(xs)
// type Any
// reference median_273:varName:var[median_FuncDef1741]
// expression VarName median
// type Any
median(// reference xs_275:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 15')
// type Any
// reference print_282:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 15'
// type Str
'Expect 15');
// expression FunCall print(sum(xs))
// type Any
// reference print_298:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall sum(xs)
// type Any
// reference sum_299:varName:var[sum_FuncDef1264]
// expression VarName sum
// type Any
sum(// reference xs_301:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
// expression FunCall print('Expect 5')
// type Any
// reference print_308:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression StrLiteral 'Expect 5'
// type Str
'Expect 5');
// expression FunCall print(average(xs))
// type Any
// reference print_323:varName:var[print_FuncDef1386]
// expression VarName print
// type Any
print(// expression FunCall average(xs)
// type Any
// reference average_324:varName:var[average_FuncDef1308]
// expression VarName average
// type Any
average(// reference xs_326:varName:var[xs_VarDef37]
// expression VarName xs
// type Any
xs));
}
}
}

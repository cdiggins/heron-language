language heron:std:0.1;

module heron:tests:0.1
{
    import heron:std.array:0.1;
    import heron:geometry.mesh:0.1;
    import heron:geometry.vector:0.1;

    function main() 
        = simpleArrayTest();

    function simpleArrayTest() {
        var xs = [1, 11, 3];
        print('Expect [1, 11, 3]');
        print(xs);
        
        print('Expect 1, 11, 3');
        for (var x in xs)
            print(x);
        
        print('Expect 1');            
        print(xs[0]);
        
        print('Expect 3');            
        print(xs.count);
        
        print('Expect 1');            
        print(xs.first);
        
        print('Expect 3');            
        print(xs.last);
        
        print('Expect 1');            
        print(xs.min);
        
        print('Expect 11');            
        print(xs.max);

        var ys = xs.mutable;
        ys[1] = 5;        
        print('Expect 5');
        print(ys[1]);        

        print('Expect 1, 3, 11');
        var zs = xs.sort;
        for (var z in zs)
            print(z);
        
        print('Expect 3');            
        print(xs.median);
        
        print('Expect 15');            
        print(xs.sum);

        print('Expect 5');            
        print(xs.average);
    }

    function colorModifier(g, amount: Float)
        = g.setVertexColors(g.uvBuffer.map(v => vector(
            sin(v.x * pi * 4f) / 2.0 + 0.5,
            sin(amount),
            cos(v.y * pi * 4f) / 2.0 + 0.5)));

    function pushModifer(g, amount: Float)
        = g.translate(g.normalBuffer.map(n => n * amount.vector));
    
    function scaleModifier(g, amount: Float)
        = g.scale(amount.vector);

    function modifiers()
        = [ 
            pushModifer,
            scaleModifier,            
            colorModifier
        ];

    function primitives()
        = [ 
            sphere(), 
            cylinder(), 
            torus(), 
            klein(), 
            plane(), 
            mobius(), 
            tetrahedron, 
            cube, 
            octahedron, 
            dodecahedron,
            icosahedron
        ];
}